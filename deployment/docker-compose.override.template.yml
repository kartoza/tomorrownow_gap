version: '3.9'
services:
  db:
    volumes:
      - ./volumes/database:/opt/postgres/data
      - ./volumes/backups:/backups
    ports:
      - "${DATABASE_PORT:-6432}:5432"

  django:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: prod
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media

  worker:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media

  celery_beat:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media

  nginx:
    volumes:
      - ./nginx/sites-enabled:/etc/nginx/conf.d:ro
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
    ports:
      - "${HTTP_PORT:-8888}:80"
    links:
      - django

  dev:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: dev
    image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}_dev
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
    environment:
      # editable in .env
      - DATABASE_NAME=${DATABASE_NAME:-django}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DJANGO_SETTINGS_MODULE=core.settings.dev

      # Email where alters should be sent. This will be used by let's encrypt and as the django admin email.
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}

      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis_password
      - SECRET_KEY=SECRET_KEY
      # s3 variable
      - S3_AWS_ACCESS_KEY_ID={S3_AWS_ACCESS_KEY_ID:-minio_tomorrownow}
      - S3_AWS_SECRET_ACCESS_KEY=${S3_AWS_SECRET_ACCESS_KEY:-minio_tomorrownow}
      - S3_AWS_ENDPOINT=${S3_AWS_ENDPOINT}
      - S3_AWS_BUCKET_NAME=${S3_AWS_BUCKET_NAME:-tomorrownow}
    ports:
      # for django test server
      - "5000:8080"
      # for ssh
      - "5001:22"
    links:
      - db
      - redis
      - worker
      - celery_beat
    entrypoint: [ ]

  minio:
    image: quay.io/minio/minio:RELEASE.2024-03-30T09-41-56Z.fips
    command: minio server /data --console-address ":9001"
    ports:
      - "9010:9000"
      - "9011:9001"
    environment:
      MINIO_ROOT_USER: ${S3_AWS_ACCESS_KEY_ID:-minio_tomorrownow}
      MINIO_ROOT_PASSWORD: ${S3_AWS_SECRET_ACCESS_KEY:-minio_tomorrownow}
      MINIO_HTTP_TRACE: /opt/bitnami/minio/log/minio.log
    volumes:
      - ./volumes/minio_data:/data
    restart: always
  
  hyrax:
    entrypoint: [ "/custom_entrypoint.sh" ]
    volumes:
      - ./volumes/hyrax_data:/usr/share/hyrax
      - ./hyrax/site.conf:/etc/bes/site.conf:ro
      - ./hyrax/entrypoint.sh:/custom_entrypoint.sh
    links:
      - minio
      - dev
      - worker
