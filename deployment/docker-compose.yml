version: '3.9'

volumes:
  static-data:
  media-data:
  conf-data:
  database:
  nginx-cache:
  backups-data:
  data-volume:
  hyrax-data:
  redis-data:

x-common-django:
  &default-common-django
  image: kartoza/${COMPOSE_PROJECT_NAME:-django_project}:${DJANGO_TAG:-1.0.0}
  environment:
    - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-core.settings.dev}

    - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
    - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}

    - DATABASE_NAME=${DATABASE_NAME:-django}
    - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
    - DATABASE_HOST=${DATABASE_HOST:-db}
    - DATABASE_PORT=${DATABASE_PORT:-5432}
    - REDIS_HOST=${REDIS_HOST:-redis}
    - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}

    - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    - SENTRY_DSN=${SENTRY_DSN:-}
    # s3 variable
    - AWS_ACCESS_KEY_ID={AWS_ACCESS_KEY_ID:-minio_tomorrownow}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-minio_tomorrownow}
    - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
    - S3_AWS_BUCKET_NAME=${S3_AWS_BUCKET_NAME:-tomorrownow}
    - INITIAL_FIXTURES=${INITIAL_FIXTURES:-}
  volumes:
    - static-data:/home/web/static
    - media-data:/home/web/media
  restart: on-failure

services:
  redis:
    image: bitnami/redis:7.0.2
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis-data:/bitnami/redis/data

  db:
    image: kartoza/postgis:14-3.3
    volumes:
      - data-volume:/opt/postgres/data
    environment:
      - DATADIR=/opt/postgres/data
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_DBNAME=${DATABASE_NAME:-django}
      - POSTGRES_USER=${DATABASE_USERNAME:-docker}
      - POSTGRES_PASS=${DATABASE_PASSWORD:-docker}

  dbbackups:
    image: kartoza/postgis:14-3.3
    volumes:
      - data-volume:/backups
    environment:
      - POSTGRES_DBNAME=${DATABASE_NAME:-django}
      - POSTGRES_USER=${DATABASE_USERNAME:-docker}
      - POSTGRES_PASS=${DATABASE_PASSWORD:-docker}

  django:
    <<: *default-common-django
    command: 'uwsgi --ini /uwsgi.conf'
    volumes:
      - static-data:/home/web/static
      - media-data:/home/web/media
      - hyrax-data:/home/web/opendap
    links:
      - db
      - worker

  worker:
    <<: *default-common-django
    entrypoint: [ ]
    command: 'celery -A core worker -l info'
    volumes:
      - hyrax-data:/home/web/opendap
    links:
      - db
      - redis
      - celery_beat

  celery_beat:
    <<: *default-common-django
    entrypoint: [ ]
    command: 'celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler'
    links:
      - db
      - redis

  nginx:
    image: nginx
    hostname: nginx
    volumes:
      - conf-data:/etc/nginx/conf.d:ro
      - static-data:/home/web/static
      - media-data:/home/web/media
      - nginx-cache:/home/web/nginx_cache
    links:
      - django

  hyrax:
    image: opendap/hyrax:1.17.0-122
    ports:
      - "8181:8080"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-minio_tomorrownow}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-minio_tomorrownow}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - S3_AWS_BUCKET_NAME=${S3_AWS_BUCKET_NAME:-tomorrownow}
    volumes:
      - hyrax-data:/usr/share/hyrax
    restart: always
